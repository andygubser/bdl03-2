{"paragraphs":[{"text":"%md\n# Prototype 2\n\n## Settings\n* Check the active interpreters: md (needs to be on the top), spark2, sh, shUser. \n* File for prototype: \n> FILE='prep_household_data_60min_singleindex.csv'\n\n## Approach\n* Download the data to local device. \n* Manipulate the data with Pandas (Pycharm).\n* Upload the data to the gateway. \n\n## Data Manipulation with Pandas\n\nFile data_preprocessing.py\n\n```\nimport pandas as pd\n\n\ninput_path = \"data_raw\"\noutput_path = \"data_prep\"\n# file = \"household_data_1min_singleindex.csv\"\n# file = \"household_data_15min_singleindex.csv\"\nfile = \"household_data_60min_singleindex.csv\"\npath_file = f\"{input_path}/{file}\"\n\ndf60_raw = pd.read_csv(path_file)\n\ndef get_df_prepared(df, num):\n    ls_cols_additional = [\"utc_timestamp\", \"cet_cest_timestamp\", \"interpolated\"]\n    df_tmp = df[ls_cols_additional + [col for col in df.columns if f\"_residential{num}\" in col]].copy()\n    df_tmp[\"unit\"] = f\"residential{num}\"\n    df_tmp.columns = df_tmp.columns.str.replace(f'DE\\_KN\\_residential{num}\\_', '', regex=True)\n    return df_tmp\n\n\ndef get_df_combined(df, max_num):\n    df_appended = pd.DataFrame()\n    for num in range(max_num):\n        print(num)\n        df_tmp = get_df_prepared(df, num=num)\n        df_appended = pd.concat([df_appended, df_tmp], axis=0, ignore_index=True)\n    return df_appended\n\n\ndf_prep = get_df_combined(df60_raw, max_num=5)\ndf_prep.to_csv(f\"{output_path}/prep_{file}\")\n\n## Bring the data to the GW\n\nGet the data from local to the gateway\n\n```\n\nBring the data from the local device to the gateway:\n```\nandy@andy-legion:~/Documents/github/bdl03-2/data_prep$ scp -p prep_household_data_1min_singleindex.csv   gw:\nandy@andy-legion:~/Documents/github/bdl03-2/data_prep$ scp -p prep_household_data_15min_singleindex.csv  gw:\nandy@andy-legion:~/Documents/github/bdl03-2/data_prep$ scp -p prep_household_data_60min_singleindex.csv  gw:\n```\nMove the data to the project folder\n```\nbd01@cl-hpsec1-50-gw-01-lx-ub18.lxd:~$ mv prep_household_data_1min_singleindex.csv  ./repos/project\nbd01@cl-hpsec1-50-gw-01-lx-ub18.lxd:~$ mv prep_household_data_15min_singleindex.csv ./repos/project\nbd01@cl-hpsec1-50-gw-01-lx-ub18.lxd:~$ mv prep_household_data_60min_singleindex.csv ./repos/project\n```","user":"bd01","dateUpdated":"2021-02-06T19:31:44+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Prototype 2</h1>\n<h2>Settings</h2>\n<ul>\n  <li>Check the active interpreters: md (needs to be on the top), spark2, sh, shUser.</li>\n  <li>\n  <p>File for prototype: </p>\n  <blockquote>\n    <p>FILE=&lsquo;prep_household_data_60min_singleindex.csv&rsquo;</p>\n  </blockquote></li>\n</ul>\n<h2>Approach</h2>\n<ul>\n  <li>Download the data to local device.</li>\n  <li>Manipulate the data with Pandas (Pycharm).</li>\n  <li>Upload the data to the gateway.</li>\n</ul>\n<h2>Data Manipulation with Pandas</h2>\n<p>File data_preprocessing.py</p>\n<pre><code>import pandas as pd\n\n\ninput_path = &quot;data_raw&quot;\noutput_path = &quot;data_prep&quot;\n# file = &quot;household_data_1min_singleindex.csv&quot;\n# file = &quot;household_data_15min_singleindex.csv&quot;\nfile = &quot;household_data_60min_singleindex.csv&quot;\npath_file = f&quot;{input_path}/{file}&quot;\n\ndf60_raw = pd.read_csv(path_file)\n\ndef get_df_prepared(df, num):\n    ls_cols_additional = [&quot;utc_timestamp&quot;, &quot;cet_cest_timestamp&quot;, &quot;interpolated&quot;]\n    df_tmp = df[ls_cols_additional + [col for col in df.columns if f&quot;_residential{num}&quot; in col]].copy()\n    df_tmp[&quot;unit&quot;] = f&quot;residential{num}&quot;\n    df_tmp.columns = df_tmp.columns.str.replace(f&#39;DE\\_KN\\_residential{num}\\_&#39;, &#39;&#39;, regex=True)\n    return df_tmp\n\n\ndef get_df_combined(df, max_num):\n    df_appended = pd.DataFrame()\n    for num in range(max_num):\n        print(num)\n        df_tmp = get_df_prepared(df, num=num)\n        df_appended = pd.concat([df_appended, df_tmp], axis=0, ignore_index=True)\n    return df_appended\n\n\ndf_prep = get_df_combined(df60_raw, max_num=5)\ndf_prep.to_csv(f&quot;{output_path}/prep_{file}&quot;)\n\n## Bring the data to the GW\n\nGet the data from local to the gateway\n\n</code></pre>\n<p>Bring the data from the local device to the gateway:</p>\n<pre><code>andy@andy-legion:~/Documents/github/bdl03-2/data_prep$ scp -p prep_household_data_1min_singleindex.csv   gw:\nandy@andy-legion:~/Documents/github/bdl03-2/data_prep$ scp -p prep_household_data_15min_singleindex.csv  gw:\nandy@andy-legion:~/Documents/github/bdl03-2/data_prep$ scp -p prep_household_data_60min_singleindex.csv  gw:\n</code></pre>\n<p>Move the data to the project folder</p>\n<pre><code>bd01@cl-hpsec1-50-gw-01-lx-ub18.lxd:~$ mv prep_household_data_1min_singleindex.csv  ./repos/project\nbd01@cl-hpsec1-50-gw-01-lx-ub18.lxd:~$ mv prep_household_data_15min_singleindex.csv ./repos/project\nbd01@cl-hpsec1-50-gw-01-lx-ub18.lxd:~$ mv prep_household_data_60min_singleindex.csv ./repos/project\n</code></pre>\n</div>"}]},"apps":[],"jobName":"paragraph_1612513400326_842072620","id":"20210204-124753_933285857","dateCreated":"2021-02-05T08:23:20+0000","dateStarted":"2021-02-06T19:31:44+0000","dateFinished":"2021-02-06T19:31:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:232"},{"text":"%sh\nDIR=/home/bd01/repos/project\n# FILE='prep_household_data_1min_singleindex.csv'        #  1min granularity    # too small granularity for analysis\n# FILE='prep_household_data_15min_singleindex.csv'       # 15min granularity    # suited for project\nFILE='prep_household_data_60min_singleindex.csv'       # 60min granualrity    # data for prototype\n\ncd $DIR\nls -lh\n\necho \"----hdfs----\"\n# hdfs dfs -rm -r /user/zeppelin/*\nhdfs dfs -test -f $FILE      || hdfs dfs -put $DIR/$FILE .\nhdfs dfs -ls /user/$USER\n\n","user":"bd01","dateUpdated":"2021-02-06T19:31:45+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"total 1.8G\n-rw-rw-r-- 1 bd01 bd01 119M Feb  5 19:02 prep_household_data_15min_singleindex.csv\n-rw-rw-r-- 1 bd01 bd01 1.6G Feb  5 19:00 prep_household_data_1min_singleindex.csv\n-rw-rw-r-- 1 bd01 bd01  34M Feb  5 18:56 prep_household_data_60min_singleindex.csv\n----hdfs----\nFound 6 items\ndrwx------   - zeppelin hdfs          0 2021-02-06 06:00 /user/zeppelin/.Trash\ndrwxr-xr-x   - zeppelin hdfs          0 2021-02-06 13:38 /user/zeppelin/conf\ndrwxr-xr-x   - zeppelin hdfs          0 2021-02-06 12:57 /user/zeppelin/notebook\n-rw-r--r--   1 zeppelin hdfs  124520554 2021-02-05 20:36 /user/zeppelin/prep_household_data_15min_singleindex.csv\n-rw-r--r--   1 zeppelin hdfs 1712423587 2021-02-06 11:26 /user/zeppelin/prep_household_data_1min_singleindex.csv\n-rw-r--r--   1 zeppelin hdfs   34626321 2021-02-05 20:35 /user/zeppelin/prep_household_data_60min_singleindex.csv\n"}]},"apps":[],"jobName":"paragraph_1612513400328_-1518101693","id":"20210204-121023_149957682","dateCreated":"2021-02-05T08:23:20+0000","dateStarted":"2021-02-06T19:31:45+0000","dateFinished":"2021-02-06T19:31:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:233"},{"text":"%md\n## Load into a Spark dataframe\n","user":"bd01","dateUpdated":"2021-02-06T19:31:50+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Load into a Spark dataframe</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1612513400328_1790237113","id":"20210204-135544_129249179","dateCreated":"2021-02-05T08:23:20+0000","dateStarted":"2021-02-06T19:31:50+0000","dateFinished":"2021-02-06T19:31:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:234"},{"text":"%spark2.pyspark\nimport os\npath = '/home/bd01/repos/project'\n# file = 'prep_household_data_1min_singleindex.csv'        #  1min granularity    # data for project\n# file='prep_household_data_15min_singleindex.csv'       # 15min granularity    # data for second prototype\nfile = 'prep_household_data_60min_singleindex.csv'       # 60min granualrity    # data for prototypeos.chdir(path)\n\npathfile = 'hdfs:///user/{}/{}'.format(os.getenv(\"USER\"),file)\ndf_read = spark.read.csv(pathfile, \n                    header=True, \n                    inferSchema=True, \n                    sep=\",\")\ndf_formatted = df_read.filter(df_read.unit != \"residential0\").\\\n                       withColumn('timestamp', F.unix_timestamp('cet_cest_timestamp', format).cast('timestamp')).\\\n                       withColumn('year', F.year('timestamp')).\\\n                       withColumn('date', F.to_date('timestamp')).\\\n                       withColumn('hour', F.hour('timestamp'))\ndf = df_formatted.na.drop(how='all', subset = ('dishwasher', 'freezer', 'grid_import', 'heat_pump', 'pv', 'washing_machine', \n                                               'circulation_pump', 'grid_export', 'refrigerator', 'ev'))\ndf.printSchema()\ndf.show()","user":"bd01","dateUpdated":"2021-02-06T19:31:51+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- _c0: integer (nullable = true)\n |-- utc_timestamp: timestamp (nullable = true)\n |-- cet_cest_timestamp: string (nullable = true)\n |-- interpolated: string (nullable = true)\n |-- unit: string (nullable = true)\n |-- dishwasher: double (nullable = true)\n |-- freezer: double (nullable = true)\n |-- grid_import: double (nullable = true)\n |-- heat_pump: double (nullable = true)\n |-- pv: double (nullable = true)\n |-- washing_machine: double (nullable = true)\n |-- circulation_pump: double (nullable = true)\n |-- grid_export: double (nullable = true)\n |-- refrigerator: double (nullable = true)\n |-- ev: double (nullable = true)\n |-- timestamp: timestamp (nullable = true)\n |-- year: integer (nullable = true)\n |-- date: date (nullable = true)\n |-- hour: integer (nullable = true)\n\n+-----+-------------------+--------------------+--------------------+------------+----------+-------+-------------------+--------------------+-------------------+---------------+----------------+-----------+------------+----+-------------------+----+----------+----+\n|  _c0|      utc_timestamp|  cet_cest_timestamp|        interpolated|        unit|dishwasher|freezer|        grid_import|           heat_pump|                 pv|washing_machine|circulation_pump|grid_export|refrigerator|  ev|          timestamp|year|      date|hour|\n+-----+-------------------+--------------------+--------------------+------------+----------+-------+-------------------+--------------------+-------------------+---------------+----------------+-----------+------------+----+-------------------+----+----------+----+\n|42317|2015-05-21 16:00:00|2015-05-21T18:00:...|DE_KN_residential...|residential1|      null|   null|              0.375|                 0.5|              0.754|           null|            null|       null|        null|null|2015-05-21 16:00:00|2015|2015-05-21|  16|\n|42318|2015-05-21 17:00:00|2015-05-21T19:00:...|DE_KN_residential...|residential1|      null|   null|              0.563|               0.349| 0.4650000000000001|           null|            null|       null|        null|null|2015-05-21 17:00:00|2015|2015-05-21|  17|\n|42319|2015-05-21 18:00:00|2015-05-21T20:00:...|DE_KN_residential...|residential1|      null|   null| 0.5270000000000001|  0.5900000000000001|0.05599999999999983|           null|            null|       null|        null|null|2015-05-21 18:00:00|2015|2015-05-21|  18|\n|42320|2015-05-21 19:00:00|2015-05-21T21:00:...|                null|residential1|      null|   null| 0.5800000000000001|  0.6839999999999999|                0.0|           null|            null|       null|        null|null|2015-05-21 19:00:00|2015|2015-05-21|  19|\n|42321|2015-05-21 20:00:00|2015-05-21T22:00:...|                null|residential1|      null|   null| 0.5099999999999998|               0.508|                0.0|           null|            null|       null|        null|null|2015-05-21 20:00:00|2015|2015-05-21|  20|\n|42322|2015-05-21 21:00:00|2015-05-21T23:00:...|                null|residential1|      null|   null|0.44200000000000017|               0.839|                0.0|           null|            null|       null|        null|null|2015-05-21 21:00:00|2015|2015-05-21|  21|\n|42323|2015-05-21 22:00:00|2015-05-22T00:00:...|                null|residential1|      null|   null| 0.3129999999999997|                0.27|                0.0|           null|            null|       null|        null|null|2015-05-21 22:00:00|2015|2015-05-21|  22|\n|42324|2015-05-21 23:00:00|2015-05-22T01:00:...|                null|residential1|      null|   null| 0.3200000000000003|0.020000000000000018|                0.0|           null|            null|       null|        null|null|2015-05-21 23:00:00|2015|2015-05-21|  23|\n|42325|2015-05-22 00:00:00|2015-05-22T02:00:...|                null|residential1|      null|   null| 0.2999999999999998|0.008999999999999897|                0.0|           null|            null|       null|        null|null|2015-05-22 00:00:00|2015|2015-05-22|   0|\n|42326|2015-05-22 01:00:00|2015-05-22T03:00:...|                null|residential1|      null|   null| 0.3100000000000005| 0.01200000000000001|                0.0|           null|            null|       null|        null|null|2015-05-22 01:00:00|2015|2015-05-22|   1|\n|42327|2015-05-22 02:00:00|2015-05-22T04:00:...|                null|residential1|      null|   null| 0.3099999999999996|0.020000000000000018|                0.0|           null|            null|       null|        null|null|2015-05-22 02:00:00|2015|2015-05-22|   2|\n|42328|2015-05-22 03:00:00|2015-05-22T05:00:...|                null|residential1|      null|   null|0.33999999999999986|  0.3470000000000004|                0.0|           null|            null|       null|        null|null|2015-05-22 03:00:00|2015|2015-05-22|   3|\n|42329|2015-05-22 04:00:00|2015-05-22T06:00:...|                null|residential1|      null|   null|0.40500000000000025|  1.6439999999999992|0.06800000000000006|           null|            null|       null|        null|null|2015-05-22 04:00:00|2015|2015-05-22|   4|\n|42330|2015-05-22 05:00:00|2015-05-22T07:00:...|                null|residential1|      null|   null| 0.5750000000000002|  2.0790000000000006|0.43900000000000006|           null|            null|       null|        null|null|2015-05-22 05:00:00|2015|2015-05-22|   5|\n|42331|2015-05-22 06:00:00|2015-05-22T08:00:...|                null|residential1|      null|   null|0.34699999999999953| 0.33999999999999986|              2.737|           null|            null|       null|        null|null|2015-05-22 06:00:00|2015|2015-05-22|   6|\n|42332|2015-05-22 07:00:00|2015-05-22T09:00:...|                null|residential1|      null|   null| 2.2349999999999994|0.009000000000000341|              2.827|           null|            null|       null|        null|null|2015-05-22 07:00:00|2015|2015-05-22|   7|\n|42333|2015-05-22 08:00:00|2015-05-22T10:00:...|                null|residential1|      null|   null| 1.8980000000000015|  0.5899999999999999| 6.3260000000000005|           null|            null|       null|        null|null|2015-05-22 08:00:00|2015|2015-05-22|   8|\n|42334|2015-05-22 09:00:00|2015-05-22T11:00:...|                null|residential1|      null|   null| 1.7850000000000001| 0.27999999999999936|  3.607000000000001|           null|            null|       null|        null|null|2015-05-22 09:00:00|2015|2015-05-22|   9|\n|42335|2015-05-22 10:00:00|2015-05-22T12:00:...|                null|residential1|      null|   null| 0.9629999999999992|0.009000000000000341| 3.3439999999999976|           null|            null|       null|        null|null|2015-05-22 10:00:00|2015|2015-05-22|  10|\n|42336|2015-05-22 11:00:00|2015-05-22T13:00:...|                null|residential1|      null|   null| 0.4299999999999997| 0.02200000000000024|  5.827999999999999|           null|            null|       null|        null|null|2015-05-22 11:00:00|2015|2015-05-22|  11|\n+-----+-------------------+--------------------+--------------------+------------+----------+-------+-------------------+--------------------+-------------------+---------------+----------------+-----------+------------+----+-------------------+----+----------+----+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://cl-hpsec1-50-gw-01-lx-ub18.lxd:4040/jobs/job?id=625","http://cl-hpsec1-50-gw-01-lx-ub18.lxd:4040/jobs/job?id=626","http://cl-hpsec1-50-gw-01-lx-ub18.lxd:4040/jobs/job?id=627"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612513400329_-176012922","id":"20210204-121027_1126578232","dateCreated":"2021-02-05T08:23:20+0000","dateStarted":"2021-02-06T19:31:51+0000","dateFinished":"2021-02-06T19:31:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:235"},{"text":"%md\n### Analysis: Which devices consume the majority of households energy (average kWh)?","user":"bd01","dateUpdated":"2021-02-06T19:31:54+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Analysis: Which devices consume the majority of households energy (average kWh)?</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1612513400330_364423999","id":"20210204-180003_1669074929","dateCreated":"2021-02-05T08:23:20+0000","dateStarted":"2021-02-06T19:31:54+0000","dateFinished":"2021-02-06T19:31:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:236"},{"text":"%spark2.pyspark\nenergy_consumption = ['dishwasher', 'freezer', 'heat_pump', 'washing_machine', 'circulation_pump', 'refrigerator', 'ev']\nenergy_production = ['pv']\nenergy_trade = ['grid_import', 'grid_export']\nenergy_all = energy_consumption + energy_production + energy_trade\n\nidx = ['unit', 'year']\ndf_gb_year = df.groupBy(idx).agg((F.avg('dishwasher'))        .alias(\"yavg_kwh_dishwasher\"), \n                                 (F.avg('freezer'))           .alias(\"yavg_kwh_freezer\"),\n                                 (F.avg('heat_pump'))         .alias(\"yavg_kwh_heat_pump\"),\n                                 (F.avg('washing_machine'))   .alias(\"yavg_kwh_washing_machine\"),\n                                 (F.avg('circulation_pump'))  .alias(\"yavg_kwh_circulation_pump\"),\n                                 (F.avg('refrigerator'))      .alias(\"yavg_kwh_refrigerator\"),\n                                 (F.avg('ev'))                .alias(\"yavg_kwh_electric_vehicle\")). \\\n                                 orderBy(idx)\nz.show(df_gb_year)\n","user":"bd01","dateUpdated":"2021-02-06T19:32:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"unit":"string","year":"string","yavg_kwh_dishwasher":"string","yavg_kwh_freezer":"string","yavg_kwh_heat_pump":"string","yavg_kwh_washing_machine":"string","yavg_kwh_circulation_pump":"string","yavg_kwh_refrigerator":"string","yavg_kwh_electric_vehicle":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":true},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","isDateFormat":false}},"commonSetting":{},"keys":[{"name":"unit","index":0,"aggr":"sum"},{"name":"year","index":1,"aggr":"sum"}],"groups":[],"values":[{"name":"yavg_kwh_dishwasher","index":2,"aggr":"sum"},{"name":"yavg_kwh_freezer","index":3,"aggr":"sum"},{"name":"yavg_kwh_dishwasher","index":2,"aggr":"sum"},{"name":"yavg_kwh_refrigerator","index":7,"aggr":"sum"},{"name":"yavg_kwh_circulation_pump","index":6,"aggr":"sum"},{"name":"yavg_kwh_washing_machine","index":5,"aggr":"sum"},{"name":"yavg_kwh_freezer","index":3,"aggr":"sum"},{"name":"yavg_kwh_dishwasher","index":2,"aggr":"sum"},{"name":"yavg_kwh_heat_pump","index":4,"aggr":"sum"},{"name":"pv","index":8,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/python","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"unit\tyear\tyavg_kwh_dishwasher\tyavg_kwh_freezer\tyavg_kwh_heat_pump\tyavg_kwh_washing_machine\tyavg_kwh_circulation_pump\tyavg_kwh_refrigerator\tyavg_kwh_electric_vehicle\nresidential1\t2015\t0.01876669153301007\t0.03236759220886863\t0.4099944279346211\t0.017520604139474174\tnull\tnull\tnull\nresidential1\t2016\t0.01656113387978142\t0.0344139344262295\t0.6430598816029144\t0.021202982695810564\tnull\tnull\tnull\nresidential1\t2017\t0.01325029446407538\t0.030836866902237955\t1.3834888497652578\t0.023622497055359275\tnull\tnull\tnull\nresidential2\t2015\t0.023347396486825597\t0.013986355081555836\tnull\t0.01258077164366374\t0.035474586557426795\tnull\tnull\nresidential2\t2016\t0.03208299180327869\t0.01324935467217346\tnull\t0.017580031876138432\t0.04584369307832422\tnull\tnull\nresidential2\t2017\t0.041699219733199094\tnull\tnull\t0.020123972602739723\t0.052245558803687885\tnull\tnull\nresidential2\t2018\tnull\tnull\tnull\t0.02105418719211823\tnull\tnull\tnull\nresidential3\t2014\t0.0406358024691358\t0.02925925925925926\tnull\t0.03947835051546392\t0.07151134020618558\t0.016737341772151897\tnull\nresidential3\t2015\t0.059971575342465756\t0.02269280821917808\tnull\t0.07376552511415524\t0.056537557077625575\t0.01814885844748858\tnull\nresidential3\t2016\t0.04005885701275045\t0.01744729052823315\tnull\t0.06273804644808743\t0.056186247723132965\t0.024999316939890714\tnull\nresidential3\t2017\t0.02472351598173517\t0.0\tnull\t0.05357739726027397\t0.0550142694063927\t0.023410911602209938\tnull\nresidential3\t2018\t0.02707502168256719\t0.0\tnull\t0.05130777422790202\t0.0423493769470405\tnull\tnull\nresidential4\t2015\t0.01274724119810825\t0.018874408828166055\t0.3989108860759494\t0.008968996321597476\tnull\t0.015521462639109699\t0.11445349448239622\nresidential4\t2016\t0.01049419398907104\t0.01855783242258652\t0.29562317850637515\t0.013536088342440801\tnull\t0.018566598360655735\t0.11547176684881602\nresidential4\t2017\t0.013125776397515533\t0.016504452054794526\t0.8666776273372019\t0.014257961783439485\tnull\t0.016130434782608793\t0.10690513698630137\nresidential4\t2018\tnull\t0.01282142857142855\tnull\tnull\tnull\tnull\t0.06612619047619027\n"},{"type":"TEXT","data":"\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://cl-hpsec1-50-gw-01-lx-ub18.lxd:4040/jobs/job?id=628"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612516790074_312770513","id":"20210205-091950_1378156004","dateCreated":"2021-02-05T09:19:50+0000","dateStarted":"2021-02-06T19:31:54+0000","dateFinished":"2021-02-06T19:31:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:237"},{"text":"%md\nFirst analysis shows a large variability among the largest energy consumer household devices. Whereas heat pumps consume by far the largest amount of households energy, electric vehicles probably follow second. The  energy consumation of other factors such as dishwasher and freezer show huge variation across households. The usage of these devices depends on individual behaviour. Unfortunately, the data does not provide an indicator for household size or living area.\n","user":"bd01","dateUpdated":"2021-02-06T19:31:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false,"completionKey":"TAB"},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>First analysis shows a large variability among the largest energy consumer household devices. Whereas heat pumps consume by far the largest amount of households energy, electric vehicles probably follow second. The energy consumation of other factors such as dishwasher and freezer show huge variation across households. The usage of these devices depends on individual behaviour. Unfortunately, the data does not provide an indicator for household size or living area.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1612516640673_895755824","id":"20210205-091720_610091839","dateCreated":"2021-02-05T09:17:20+0000","dateStarted":"2021-02-06T19:31:57+0000","dateFinished":"2021-02-06T19:31:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:238"},{"text":"%md\n## Learnings\n\nLearnings regarding this project:\n\n* Eventhough Zepellin is quite handy to use and is similiar to Jupyter, I really miss features such as autocompletion. \n* Data manipulation with PySpark is challenging. PySpark might not even be the right chose. Therefore, I prefer Pandas to preprocess data. \n\nLearnings regarding my Master Thesis:\n\n* The average energy consumption for electrical devices are quite different across households. Unfortunately, the dataset does not provide household size or area information. For my thesis, I might need several datasets from different sources, providing households information, building details and energy consumption. \n","user":"bd01","dateUpdated":"2021-02-06T19:31:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false,"completionKey":"TAB"},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Learnings</h2>\n<p>Learnings regarding this project:</p>\n<ul>\n  <li>Eventhough Zepellin is quite handy to use and is similiar to Jupyter, I really miss features such as autocompletion.</li>\n  <li>Data manipulation with PySpark is challenging. PySpark might not even be the right chose. Therefore, I prefer Pandas to preprocess data.</li>\n</ul>\n<p>Learnings regarding my Master Thesis:</p>\n<ul>\n  <li>The average energy consumption for electrical devices are quite different across households. Unfortunately, the dataset does not provide household size or area information. For my thesis, I might need several datasets from different sources, providing households information, building details and energy consumption.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1612517830140_1273552414","id":"20210205-093710_823852557","dateCreated":"2021-02-05T09:37:10+0000","dateStarted":"2021-02-06T19:31:57+0000","dateFinished":"2021-02-06T19:31:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:239"},{"text":"%md\n","user":"bd01","dateUpdated":"2021-02-06T14:22:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612613831082_1497259466","id":"20210206-121711_959934793","dateCreated":"2021-02-06T12:17:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:240"}],"name":"MEP / wdgubser / 510 Prototype 2","id":"2FZNQXFV1","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"shUser:bd01:":[],"sh:shared_process":[],"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}